// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PruebaTecnica.Data;

#nullable disable

namespace PruebaTecnica.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250630015000_correctionsv2")]
    partial class correctionsv2
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("PruebaTecnica.Models.EscuelaModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Activo")
                        .HasColumnType("bit");

                    b.Property<DateTime>("AltaSistema")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Borrado")
                        .HasColumnType("bit");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Escuelas");
                });

            modelBuilder.Entity("PruebaTecnica.Models.EstudianteEscuelaModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Activo")
                        .HasColumnType("bit");

                    b.Property<DateTime>("AltaSistema")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Borrado")
                        .HasColumnType("bit");

                    b.Property<int>("EscuelaId")
                        .HasColumnType("int");

                    b.Property<int>("EstudianteId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("EscuelaId");

                    b.HasIndex("EstudianteId");

                    b.ToTable("AlumnoEscuelas");
                });

            modelBuilder.Entity("PruebaTecnica.Models.EstudianteModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Activo")
                        .HasColumnType("bit");

                    b.Property<DateTime>("AltaSistema")
                        .HasColumnType("datetime2");

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Borrado")
                        .HasColumnType("bit");

                    b.Property<DateTime>("FechaNacimiento")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Estudiantes");
                });

            modelBuilder.Entity("PruebaTecnica.Models.ProfesorEstudianteModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Activo")
                        .HasColumnType("bit");

                    b.Property<DateTime>("AltaSistema")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Borrado")
                        .HasColumnType("bit");

                    b.Property<int>("EstudianteId")
                        .HasColumnType("int");

                    b.Property<int>("ProfesorId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("EstudianteId");

                    b.HasIndex("ProfesorId");

                    b.ToTable("ProfesorAlumnos");
                });

            modelBuilder.Entity("PruebaTecnica.Models.ProfesorModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Activo")
                        .HasColumnType("bit");

                    b.Property<DateTime>("AltaSistema")
                        .HasColumnType("datetime2");

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Borrado")
                        .HasColumnType("bit");

                    b.Property<int>("EscuelaId")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("EscuelaId");

                    b.ToTable("Profesores");
                });

            modelBuilder.Entity("PruebaTecnica.Models.EstudianteEscuelaModel", b =>
                {
                    b.HasOne("PruebaTecnica.Models.EscuelaModel", "Escuela")
                        .WithMany("AlumnoEscuelas")
                        .HasForeignKey("EscuelaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PruebaTecnica.Models.EstudianteModel", "Estudiante")
                        .WithMany("AlumnoEscuelas")
                        .HasForeignKey("EstudianteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Escuela");

                    b.Navigation("Estudiante");
                });

            modelBuilder.Entity("PruebaTecnica.Models.ProfesorEstudianteModel", b =>
                {
                    b.HasOne("PruebaTecnica.Models.EstudianteModel", "Estudiante")
                        .WithMany("ProfesorAlumnos")
                        .HasForeignKey("EstudianteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PruebaTecnica.Models.ProfesorModel", "Profesor")
                        .WithMany("ProfesorAlumnos")
                        .HasForeignKey("ProfesorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Estudiante");

                    b.Navigation("Profesor");
                });

            modelBuilder.Entity("PruebaTecnica.Models.ProfesorModel", b =>
                {
                    b.HasOne("PruebaTecnica.Models.EscuelaModel", "Escuela")
                        .WithMany("Profesores")
                        .HasForeignKey("EscuelaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Escuela");
                });

            modelBuilder.Entity("PruebaTecnica.Models.EscuelaModel", b =>
                {
                    b.Navigation("AlumnoEscuelas");

                    b.Navigation("Profesores");
                });

            modelBuilder.Entity("PruebaTecnica.Models.EstudianteModel", b =>
                {
                    b.Navigation("AlumnoEscuelas");

                    b.Navigation("ProfesorAlumnos");
                });

            modelBuilder.Entity("PruebaTecnica.Models.ProfesorModel", b =>
                {
                    b.Navigation("ProfesorAlumnos");
                });
#pragma warning restore 612, 618
        }
    }
}
